commit 9ecd8b87c00318aee8b32c354acbcd15f52ed2ec
Author: Jost Berthold <jost.berthold@gmail.com>
Date:   Fri Apr 5 14:27:37 2024 +1100

    Adapt PR test workflow (adding booster build and integration test)

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index e18f72c85..bba157455 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -3,17 +3,22 @@
 name: "Test"
 on:
+  workflow_dispatch:
   pull_request:
+
 concurrency:
-  group: ${{ github.workflow }}-${{ github.ref }}
+  # head_ref is defined for PRs only, so we use run_id (unique) in case
+  # we want to run on the main branch, to ensure all commits are built
+  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
   cancel-in-progress: true

 env:
   ghc_version: "9.6.4"
   stack_version: "2.15.1"
+  hpack_version: '0.34.2'

 jobs:
   formatting:
-    name: 'Auto-formatting'
+    name: 'Formatting and Style'
     runs-on: ubuntu-22.04
     steps:
       - name: 'Check out code'
@@ -20,7 +25,6 @@ jobs:
           ref: ${{ github.event.pull_request.head.ref }}
           fetch-depth: 0
           submodules: recursive
-          token: ${{ secrets.JENKINS_GITHUB_PAT }}

       - name: 'Install Nix'
         uses: cachix/install-nix-action@v25
@@ -38,8 +42,7 @@ jobs:
           authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'

       - name: Format
-        run: |
-          nix develop .#fourmolu --command bash -c "./scripts/fourmolu.sh"
+        run: nix develop .#style --command bash -c './scripts/fourmolu.sh'

       - name: Update branch
         env:
@@ -60,6 +63,9 @@ jobs:
             echo "Reformatted code pushed, aborting this workflow" | tee -a $GITHUB_STEP_SUMMARY
             exit 1
           fi
+      # could run hlint here, but then no more jobs would run if the code is not accepted
+      # - name: 'Check style with hlint'
+      #   run: nix develop .#style --command bash -c './scripts/hlint.sh'

   nix-build:
     name: 'Nix / Unit Tests'
@@ -109,7 +115,7 @@ jobs:
           authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'

       - name: Build
-        run: GC_DONT_GC=1 nix build .#kore-exec
+        run: GC_DONT_GC=1 nix build .#kore-exec .#kore-rpc-booster

       - name: Cache Cabal package database and store
         uses: actions/cache@v4
@@ -117,15 +123,16 @@ jobs:
           path: |
             ~/.cabal/packages
             ~/.cabal/store
-          key: cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}-${{ hashFiles('cabal.project.freeze') }}-${{ hashFiles('kore/kore.cabal') }}-${{ hashFiles('kore-rpc-types/kore-rpc-types.cabal') }}
+          key: cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}-${{ hashFiles('cabal.project.freeze') }}-${{ hashFiles('kore/kore.cabal') }}-${{ hashFiles('kore-rpc-types/kore-rpc-types.cabal') }}-${{ hashFiles('booster/hs-backend-booster.cabal') }}
           restore-keys: |
+            cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}-${{ hashFiles('cabal.project.freeze') }}-${{ hashFiles('kore/kore.cabal') }}-${{ hashFiles('kore-rpc-types/kore-rpc-types.cabal') }}
             cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}-${{ hashFiles('cabal.project.freeze') }}-${{ hashFiles('kore/kore.cabal') }}
             cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}-${{ hashFiles('cabal.project.freeze') }}
             cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}
             cabal-nix-${{ runner.os }}-ghc-${{ env.ghc_version }}

       - name: Test
-        run: GC_DONT_GC=1 nix develop .#cabal --command bash -c "cabal update && cabal build all && cabal test --enable-tests --test-show-details=direct all"
+        run: GC_DONT_GC=1 nix develop .#cabal --command bash -c "hpack ./booster && hpack dev-tools && cabal update && cabal build all && cabal test --enable-tests --test-show-details=direct kore-test unit-tests"

   nix-integration:
     name: 'Nix / Integration'
@@ -153,7 +160,13 @@ jobs:
           name: k-framework
           skipPush: true

-      - name: Run integration tests
+      - name: Run booster integration Tests
+        run: |
+          GC_DONT_GC=1 nix develop .#cabal --command bash -c "scripts/booster-integration-tests.sh"
+
+      - name: Run kore integration tests
+        # FIXME do not run this unless anything has changed in a relevant directory
+        # see https://github.com/dorny/paths-filter
         run: |
           nix develop github:runtimeverification/k/v$(cat deps/k_release)#kore-integration-tests \
                 --override-input haskell-backend . --update-input haskell-backend \
@@ -178,10 +191,10 @@ jobs:
         uses: actions/cache@v4
         with:
           path: ~/.stack
-          key: stack-2-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('stack.yaml.lock') }}
+          key: stack-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('stack.yaml.lock') }}
           restore-keys: |
-            stack-2-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('stack.yaml') }}
-            stack-2-${{ runner.os }}-ghc-${{ env.ghc_version }}
+            stack-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('stack.yaml') }}
+            stack-${{ runner.os }}-ghc-${{ env.ghc_version }}

       - uses: haskell-actions/setup@v2.7
         id: setup-haskell-stack
@@ -199,8 +212,11 @@ jobs:
             exit 1
           fi

+      - name: Build all packages (preparing for test)
+        run: stack build --test --no-run-tests --pedantic
+
       - name: Run unit tests
-        run: stack test --pedantic
+        run: stack test kore:kore-test hs-backend-booster:unit-tests

   hlint:
     name: 'HLint'
